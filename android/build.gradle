apply plugin: 'com.android.library'

group = 'expo.modules.llmmediapipe'
version = '0.1.0'

def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
apply from: expoModulesCorePlugin
applyKotlinExpoModulesCorePlugin()
useCoreDependencies()
useExpoPublishing()

buildscript {
  ext.safeExtGet = { prop, fallback ->
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
  }
}

android {
  namespace "expo.modules.llmmediapipe"
  compileSdkVersion safeExtGet("compileSdkVersion", 34)
  
  defaultConfig {
    minSdkVersion safeExtGet("minSdkVersion", 24)
    targetSdkVersion safeExtGet("targetSdkVersion", 34)
    versionCode 1
    versionName "0.1.0"
  }
  
  lintOptions {
    abortOnError false
  }
  
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }
}

kotlin {
  jvmToolchain(17)
}

repositories {
  mavenCentral()
  google()
}

dependencies {
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.2"
  implementation "com.google.mediapipe:tasks-genai:0.10.29"
  testImplementation "junit:junit:4.13.2"
  testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.10.2"
}